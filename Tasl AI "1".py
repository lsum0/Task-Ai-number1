# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DRjil0OaOgbjQ9IPoJkv_Nnh1-ialvW7
"""

!pip install tensorflow pillow

from google.colab import files
uploaded = files.upload()

uploaded = files.upload()

!ls -l

import tensorflow as tf
from tensorflow.keras.models import load_model
from tensorflow.keras.layers import DepthwiseConv2D
import numpy as np
from PIL import Image
from tabulate import tabulate  # لتنسيق الجدول

# تعديل طبقة DepthwiseConv2D لتجاهل 'groups'
class FixedDepthwiseConv2D(DepthwiseConv2D):
    def __init__(self, *args, **kwargs):
        if 'groups' in kwargs:
            kwargs.pop('groups')
        super().__init__(*args, **kwargs)

# تحميل النموذج
model = load_model("keras_model (3).h5", custom_objects={'DepthwiseConv2D': FixedDepthwiseConv2D})

class_names = ["RAM", "CPU", "Arduino", "GPU", "Power Supply"]

def preprocess_image(path):
    try:
        img = Image.open(path).convert('RGB').resize((224, 224))
    except:
        print("الصورة غير موجودة")
        return None
    arr = np.array(img) / 255.0
    arr = arr.reshape(1, 224, 224, 3)
    return arr

def predict(path):
    img = preprocess_image(path)
    if img is None:
        return

    pred = model.predict(img)
    probs = tf.nn.softmax(pred).numpy()[0]
    best_index = np.argmax(probs)

    # بيانات الجدول: كل صف فيه صنف ونسبة التطابق (بالـ%)
    table_data = []
    for i, cls in enumerate(class_names):
        # نضع علامة "*" بجانب الصنف المتوقع
        mark = "*" if i == best_index else ""
        table_data.append([cls + mark, f"{probs[i]*100:.2f} %"])

    print(f"\nالنتيجة المتوقعة: {class_names[best_index]}")
    print(f"نسبة التطابق: {probs[best_index]*100:.2f} %\n")
    print(tabulate(table_data, headers=["الصنف", "نسبة التطابق"], tablefmt="grid"))

# مثال للتجربة
predict("test_image.jpeg")